{"ast":null,"code":"import * as THREE from 'three';\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js';\nconst canvas = document.querySelector('canvas.webgl');\nconst scene = new THREE.Scene();\nconst ambient = new THREE.AmbientLight(0xffffff, 10);\nscene.add(ambient);\nconst directionlight = new THREE.DirectionalLight(0xfffff, 20);\nscene.add(directionlight);\nconst textureLoader = new THREE.TextureLoader();\nconst dracoLoader = new DRACOLoader();\ndracoLoader.setDecoderPath('draco/');\nconst gltfLoader = new GLTFLoader();\ngltfLoader.setDRACOLoader(dracoLoader);\nconst bakedTexture = textureLoader.load('baked.jpg');\nbakedTexture.flipY = false;\nbakedTexture.encoding = THREE.sRGBEncoding;\nconst bakedMaterial = new THREE.MeshBasicMaterial({\n  map: bakedTexture\n});\nconst portalLightMaterial = new THREE.MeshBasicMaterial({\n  color: 0xffffff\n});\nconst poleLightMaterial = new THREE.MeshBasicMaterial({\n  color: 0xffffe5\n});\ngltfLoader.load('static/portal.glb', gltf => {\n  const bakedMesh = gltf.scene.children.find(child => child.name === 'baked');\n  const portalLightMesh = gltf.scene.children.find(child => child.name === 'portalLight');\n  const poleLightAMesh = gltf.scene.children.find(child => child.name === 'poleLightA');\n  const poleLightBMesh = gltf.scene.children.find(child => child.name === 'poleLightB');\n  bakedMesh.material = bakedMaterial;\n  portalLightMesh.material = portalLightMaterial;\n  poleLightAMesh.material = poleLightMaterial;\n  poleLightBMesh.material = poleLightMaterial;\n  scene.add(gltf.scene);\n});\nconst sizes = {\n  width: window.innerWidth,\n  height: window.innerHeight\n};\nwindow.addEventListener('resize', () => {\n  sizes.width = window.innerWidth;\n  sizes.height = window.innerHeight;\n  camera.aspect = sizes.width / sizes.height;\n  camera.updateProjectionMatrix();\n  renderer.setSize(sizes.width, sizes.height);\n  renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\n});\nconst camera = new THREE.PerspectiveCamera(45, sizes.width / sizes.height, 0.1, 100);\ncamera.position.x = 4;\ncamera.position.y = 2;\ncamera.position.z = 4;\nscene.add(camera);\nconst controls = new OrbitControls(camera, canvas);\ncontrols.enableDamping = true;\nconst renderer = new THREE.WebGLRenderer({\n  canvas: canvas,\n  antialias: true\n});\nrenderer.setSize(sizes.width, sizes.height);\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2));\nrenderer.outputEncoding = THREE.sRGBEncoding;\nconst clock = new THREE.Clock();\nconst tick = () => {\n  const elapsedTime = clock.getElapsedTime();\n  controls.update();\n  renderer.render(scene, camera);\n  window.requestAnimationFrame(tick);\n};\ntick();","map":{"version":3,"names":["THREE","OrbitControls","GLTFLoader","DRACOLoader","canvas","document","querySelector","scene","Scene","ambient","AmbientLight","add","directionlight","DirectionalLight","textureLoader","TextureLoader","dracoLoader","setDecoderPath","gltfLoader","setDRACOLoader","bakedTexture","load","flipY","encoding","sRGBEncoding","bakedMaterial","MeshBasicMaterial","map","portalLightMaterial","color","poleLightMaterial","gltf","bakedMesh","children","find","child","name","portalLightMesh","poleLightAMesh","poleLightBMesh","material","sizes","width","window","innerWidth","height","innerHeight","addEventListener","camera","aspect","updateProjectionMatrix","renderer","setSize","setPixelRatio","Math","min","devicePixelRatio","PerspectiveCamera","position","x","y","z","controls","enableDamping","WebGLRenderer","antialias","outputEncoding","clock","Clock","tick","elapsedTime","getElapsedTime","update","render","requestAnimationFrame"],"sources":["/Users/tny/Desktop/森林小屋2/cottage/cottageapp/src/three.js"],"sourcesContent":["\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js'\n\nconst canvas = document.querySelector('canvas.webgl')\n\nconst scene = new THREE.Scene()\n\nconst ambient = new THREE.AmbientLight(0xffffff, 10);\nscene.add(ambient);\n\nconst directionlight = new THREE.DirectionalLight(0xfffff, 20);\nscene.add(directionlight);\n\nconst textureLoader = new THREE.TextureLoader()\n\nconst dracoLoader = new DRACOLoader()\ndracoLoader.setDecoderPath('draco/')\n\nconst gltfLoader = new GLTFLoader()\ngltfLoader.setDRACOLoader(dracoLoader)\n\n\nconst bakedTexture = textureLoader.load('baked.jpg')\nbakedTexture.flipY = false\nbakedTexture.encoding = THREE.sRGBEncoding\n\n\nconst bakedMaterial = new THREE.MeshBasicMaterial({ map: bakedTexture })\n\nconst portalLightMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff })\n\nconst poleLightMaterial = new THREE.MeshBasicMaterial({ color: 0xffffe5 })\n\n\ngltfLoader.load(\n    'static/portal.glb',\n    (gltf) =>\n    {\n        const bakedMesh = gltf.scene.children.find(child => child.name === 'baked')\n        const portalLightMesh = gltf.scene.children.find(child => child.name === 'portalLight')\n        const poleLightAMesh = gltf.scene.children.find(child => child.name === 'poleLightA')\n        const poleLightBMesh = gltf.scene.children.find(child => child.name === 'poleLightB')\n\n        bakedMesh.material = bakedMaterial\n        portalLightMesh.material = portalLightMaterial\n        poleLightAMesh.material = poleLightMaterial\n        poleLightBMesh.material = poleLightMaterial\n\n        scene.add(gltf.scene)\n    }\n)\n\n\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nwindow.addEventListener('resize', () =>\n{\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n\nconst camera = new THREE.PerspectiveCamera(45, sizes.width / sizes.height, 0.1, 100)\ncamera.position.x = 4\ncamera.position.y = 2\ncamera.position.z = 4\nscene.add(camera)\n\nconst controls = new OrbitControls(camera, canvas)\ncontrols.enableDamping = true\n\n\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n    antialias: true\n})\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\nrenderer.outputEncoding = THREE.sRGBEncoding\n\n\nconst clock = new THREE.Clock()\n\nconst tick = () =>\n{\n    const elapsedTime = clock.getElapsedTime()\n\n    controls.update()\n\n    renderer.render(scene, camera)\n\n    window.requestAnimationFrame(tick)\n}\n\ntick()"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}