{"ast":null,"code":"import*as THREE from'three';import{OrbitControls}from'three/examples/jsm/controls/OrbitControls.js';import{GLTFLoader}from'three/examples/jsm/loaders/GLTFLoader.js';import{DRACOLoader}from'three/examples/jsm/loaders/DRACOLoader.js';const canvas=document.querySelector('canvas.webgl');const scene=new THREE.Scene();const ambient=new THREE.AmbientLight(0xffffff,10);scene.add(ambient);const directionlight=new THREE.DirectionalLight(0xfffff,20);scene.add(directionlight);const textureLoader=new THREE.TextureLoader();const dracoLoader=new DRACOLoader();dracoLoader.setDecoderPath('draco/');const gltfLoader=new GLTFLoader();gltfLoader.setDRACOLoader(dracoLoader);const bakedTexture=textureLoader.load('static/baked.jpg');bakedTexture.flipY=false;bakedTexture.encoding=THREE.sRGBEncoding;const bakedMaterial=new THREE.MeshBasicMaterial({map:bakedTexture});const portalLightMaterial=new THREE.MeshBasicMaterial({color:0xffffff});const poleLightMaterial=new THREE.MeshBasicMaterial({color:0xffffe5});gltfLoader.load('static/portal.glb',gltf=>{const bakedMesh=gltf.scene.children.find(child=>child.name==='baked');const portalLightMesh=gltf.scene.children.find(child=>child.name==='portalLight');const poleLightAMesh=gltf.scene.children.find(child=>child.name==='poleLightA');const poleLightBMesh=gltf.scene.children.find(child=>child.name==='poleLightB');bakedMesh.material=bakedMaterial;portalLightMesh.material=portalLightMaterial;poleLightAMesh.material=poleLightMaterial;poleLightBMesh.material=poleLightMaterial;scene.add(gltf.scene);});const sizes={width:window.innerWidth,height:window.innerHeight};window.addEventListener('resize',()=>{sizes.width=window.innerWidth;sizes.height=window.innerHeight;camera.aspect=sizes.width/sizes.height;camera.updateProjectionMatrix();renderer.setSize(sizes.width,sizes.height);renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));});const camera=new THREE.PerspectiveCamera(45,sizes.width/sizes.height,0.1,100);camera.position.x=4;camera.position.y=2;camera.position.z=4;scene.add(camera);const controls=new OrbitControls(camera,canvas);controls.enableDamping=true;const renderer=new THREE.WebGLRenderer({canvas:canvas,antialias:true});renderer.setSize(sizes.width,sizes.height);renderer.setPixelRatio(Math.min(window.devicePixelRatio,2));renderer.outputEncoding=THREE.sRGBEncoding;const clock=new THREE.Clock();const tick=()=>{const elapsedTime=clock.getElapsedTime();controls.update();renderer.render(scene,camera);window.requestAnimationFrame(tick);};tick();","map":{"version":3,"names":["THREE","OrbitControls","GLTFLoader","DRACOLoader","canvas","document","querySelector","scene","Scene","ambient","AmbientLight","add","directionlight","DirectionalLight","textureLoader","TextureLoader","dracoLoader","setDecoderPath","gltfLoader","setDRACOLoader","bakedTexture","load","flipY","encoding","sRGBEncoding","bakedMaterial","MeshBasicMaterial","map","portalLightMaterial","color","poleLightMaterial","gltf","bakedMesh","children","find","child","name","portalLightMesh","poleLightAMesh","poleLightBMesh","material","sizes","width","window","innerWidth","height","innerHeight","addEventListener","camera","aspect","updateProjectionMatrix","renderer","setSize","setPixelRatio","Math","min","devicePixelRatio","PerspectiveCamera","position","x","y","z","controls","enableDamping","WebGLRenderer","antialias","outputEncoding","clock","Clock","tick","elapsedTime","getElapsedTime","update","render","requestAnimationFrame"],"sources":["/Users/tny/Documents/GitHub/3D-cottage/src/three.js"],"sourcesContent":["\nimport * as THREE from 'three'\nimport { OrbitControls } from 'three/examples/jsm/controls/OrbitControls.js'\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js'\nimport { DRACOLoader } from 'three/examples/jsm/loaders/DRACOLoader.js'\n\nconst canvas = document.querySelector('canvas.webgl')\n\nconst scene = new THREE.Scene()\n\nconst ambient = new THREE.AmbientLight(0xffffff, 10);\nscene.add(ambient);\n\nconst directionlight = new THREE.DirectionalLight(0xfffff, 20);\nscene.add(directionlight);\n\nconst textureLoader = new THREE.TextureLoader()\n\nconst dracoLoader = new DRACOLoader()\ndracoLoader.setDecoderPath('draco/')\n\nconst gltfLoader = new GLTFLoader()\ngltfLoader.setDRACOLoader(dracoLoader)\n\n\nconst bakedTexture = textureLoader.load('static/baked.jpg')\nbakedTexture.flipY = false\nbakedTexture.encoding = THREE.sRGBEncoding\n\n\nconst bakedMaterial = new THREE.MeshBasicMaterial({ map: bakedTexture })\n\nconst portalLightMaterial = new THREE.MeshBasicMaterial({ color: 0xffffff })\n\nconst poleLightMaterial = new THREE.MeshBasicMaterial({ color: 0xffffe5 })\n\n\ngltfLoader.load(\n    'static/portal.glb',\n    (gltf) =>\n    {\n        const bakedMesh = gltf.scene.children.find(child => child.name === 'baked')\n        const portalLightMesh = gltf.scene.children.find(child => child.name === 'portalLight')\n        const poleLightAMesh = gltf.scene.children.find(child => child.name === 'poleLightA')\n        const poleLightBMesh = gltf.scene.children.find(child => child.name === 'poleLightB')\n\n        bakedMesh.material = bakedMaterial\n        portalLightMesh.material = portalLightMaterial\n        poleLightAMesh.material = poleLightMaterial\n        poleLightBMesh.material = poleLightMaterial\n\n        scene.add(gltf.scene)\n    }\n)\n\n\nconst sizes = {\n    width: window.innerWidth,\n    height: window.innerHeight\n}\n\nwindow.addEventListener('resize', () =>\n{\n    sizes.width = window.innerWidth\n    sizes.height = window.innerHeight\n    camera.aspect = sizes.width / sizes.height\n    camera.updateProjectionMatrix()\n\n    renderer.setSize(sizes.width, sizes.height)\n    renderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\n})\n\n\nconst camera = new THREE.PerspectiveCamera(45, sizes.width / sizes.height, 0.1, 100)\ncamera.position.x = 4\ncamera.position.y = 2\ncamera.position.z = 4\nscene.add(camera)\n\nconst controls = new OrbitControls(camera, canvas)\ncontrols.enableDamping = true\n\n\nconst renderer = new THREE.WebGLRenderer({\n    canvas: canvas,\n    antialias: true\n})\nrenderer.setSize(sizes.width, sizes.height)\nrenderer.setPixelRatio(Math.min(window.devicePixelRatio, 2))\nrenderer.outputEncoding = THREE.sRGBEncoding\n\n\nconst clock = new THREE.Clock()\n\nconst tick = () =>\n{\n    const elapsedTime = clock.getElapsedTime()\n\n    controls.update()\n\n    renderer.render(scene, camera)\n\n    window.requestAnimationFrame(tick)\n}\n\ntick()"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}